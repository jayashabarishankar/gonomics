name: Go

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:

  format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: go fmt
        run: go fmt ./...
      - name: go fmt simplify
        run: gofmt -s -w ./*/*.go
      - name: go fmt simplify 2-deep
        run: gofmt -s -w ./*/*/*.go
      - name: go fmt simplify cmd
        run: gofmt -s -w ./cmd/*/*.go
      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$(if git diff-index --quiet HEAD --; then echo "false"; else echo "true"; fi)
      - name: Push changes
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.email "AutoFmtBot@fmtyacodeffs.com"
          git config --global user.name "AutoFmt Bot"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
          git commit -am "fix: automated go fmt on all files"
          git push

  cicd:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v3
        with:
          path: ${{ github.workspace }}/src/github.com/vertgenlab/${{ github.repository }}
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: Verify dependencies
        run: go mod verify

      - name: Build
        run:
          go build ./...

      - name: Install
        run: go install ./...

      - name: Test
        run:  go test ./...

  coverage:
    needs: cicd
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: actions/setup-go@v4
        with:
          go-version: '1.18'
      - name: Run coverage
        run: go install ./... && go test -coverprofile=coverage.txt -covermode=atomic ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: /home/runner/go/src/github.com/vertgenlab/gonomics/coverage.txt
          verbose: true
